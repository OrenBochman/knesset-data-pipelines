{{ if .Values.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.name | default "db" | quote}}
spec:
  selector:
    app: {{.Values.name | default "db" | quote}}
  ports:
  - name: "5432"
    port: 5432
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{.Values.name | default "db" | quote}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{.Values.name | default "db" | quote}}
    spec:
      containers:
      - name: {{.Values.name | default "db" | quote}}
        image: {{.Values.image | default "sameersbn/postgresql:9.6-2" | quote}}
        env: [{name: "PG_PASSWORD", valueFrom: {secretKeyRef: {name: {{.Values.global.secretEnvVars | quote}}, key: "PG_PASSWORD"}}}]
        ports: [{containerPort: 5432}]
        volumeMounts: [{name: "knesset-data-pipelines-db", mountPath: "/var/lib/postgresql"}]
        resources:
          requests:
            cpu: {{.Values.cpuRequests | default "0.2"}}
            memory: {{.Values.memoryRequests | default "150Mi" | quote}}
#        readinessProbe:
#          initialDelaySeconds: 5
#          periodSeconds: 5
#          timeoutSeconds: 1
#          exec: {command: ["psql", "-h", "127.0.0.1", "-U", "postgres", "-d", "postgres", "-c", "select 1"]}
      {{ if .Values.backupUploadServiceAccountKeySecret }}
      # creates a daily DB backup and uploads to google storage
      - name: {{.Values.name | default "db"}}-backup
        image: {{.Values.dbBackupImage | quote}}
        env:
        - {name: "PGPASSWORD", valueFrom: {secretKeyRef: {name: {{.Values.global.secretEnvVars | quote}}, key: "DB_BACKUP_PASSWORD"}}}
        - {name: "PGHOST", valueFrom: {secretKeyRef: {name: {{.Values.global.secretEnvVars | quote}}, key: "DB_BACKUP_HOST"}}}
        - {name: "PGPORT", valueFrom: {secretKeyRef: {name: {{.Values.global.secretEnvVars | quote}}, key: "DB_BACKUP_PORT"}}}
        - {name: "PGUSER", valueFrom: {secretKeyRef: {name: {{.Values.global.secretEnvVars | quote}}, key: "DB_BACKUP_USER"}}}
        - {name: "GOOGLE_AUTH_SECRET_KEY_FILE", value: "/upload-secret/key"}
        - {name: "SERVICE_ACCOUNT_ID", value: {{.Values.backupUploadServiceAccountId | quote}}}
        - {name: "CLOUDSDK_CORE_PROJECT", value: {{.Values.backupUploadProjectId | quote}}}
        - {name: "CLOUDSDK_COMPUTE_ZONE", value: {{.Values.backupUploadZone | quote}}}
        - {name: "STORAGE_BUCKET_NAME", value: {{.Values.backupUploadBucketName | quote}}}
        resources: {requests: {cpu: 0.01, memory: "1Mi"}}
        volumeMounts: [{name: "upload-secret", mountPath: "/upload-secret"}]
      {{ end }}
      volumes:
      - name: knesset-data-pipelines-db
        gcePersistentDisk:
          pdName: {{.Values.gcePersistentDiskName | quote}}
          fsType: ext4
      {{ if .Values.backupUploadServiceAccountKeySecret }}
      - name: upload-secret
        secret:
          secretName: {{.Values.backupUploadServiceAccountKeySecret | quote}}
      {{ end }}
{{ end }}
