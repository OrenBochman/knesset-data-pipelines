apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Values.configMapName | default "nginx-conf-d" | quote}}
data:
  default.conf: |
    server {
        listen 80;
        server_name  _;
        include /etc/nginx/conf.d/healthcheck.inc;
        include /etc/nginx/conf.d/letsencrypt.inc;
        {{ if .Values.sslDomain }}
          location / {
            return 301 https://{{.Values.sslDomain}}$request_uri;
          }
        {{ else }}
          include /etc/nginx/conf.d/services.inc;
        {{ end }}
    }
    {{ if .Values.sslDomain }}
    server {
        listen 443 ssl http2;
        server_name {{.Values.sslDomain}};
        include /etc/nginx/conf.d/ssl.inc;
        ssl_certificate /etc/letsencrypt/live/{{.Values.sslDomain}}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{.Values.sslDomain}}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/{{.Values.sslDomain}}/chain.pem;
        include /etc/nginx/conf.d/healthcheck.inc;
        include /etc/nginx/conf.d/letsencrypt.inc;
        include /etc/nginx/conf.d/services.inc;
    }
    {{ end }}
    {{ if .Values.minioSslDomain }}
    server {
        listen 443 ssl http2;
        server_name {{.Values.minioSslDomain}};
        include /etc/nginx/conf.d/ssl.inc;
        ssl_certificate /etc/letsencrypt/live/{{.Values.minioSslDomain}}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{.Values.minioSslDomain}}/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/{{.Values.minioSslDomain}}/chain.pem;
        include /etc/nginx/conf.d/letsencrypt.inc;
        location / {
          proxy_pass http://minio:9000/;
        }
    }
    {{ end }}

  letsencrypt.inc: |
    {{ if .Values.global.sharedHostName }}
    # let's encrypt authentication challenge
    location /.well-known/ {
        alias /usr/share/nginx/html/.well-known/;
    }
    {{ end }}

  services.inc: |
    {{ if .Values.enableData }}include /etc/nginx/conf.d/data.inc;{{ end }}
    {{ if .Values.enablePipelines }}include /etc/nginx/conf.d/pipelines.inc;{{ end }}
    {{ if .Values.enableAdminer }}include /etc/nginx/conf.d/adminer.inc;{{ end }}
    {{ if .Values.enableFlower }}include /etc/nginx/conf.d/flower.inc;{{ end }}
    {{ if .Values.enableMetabase }}include /etc/nginx/conf.d/metabase.inc;{{ end }}
    {{ if .Values.enableGrafana }}include /etc/nginx/conf.d/grafana.inc;{{ end }}
    {{ if .Values.enableCommittees }}include /etc/nginx/conf.d/committees.inc;{{ end }}

  healthcheck.inc: |
    location = / {
        return 200 'it works!';
        add_header Content-Type text/plain;
    }

  pipelines.inc: |
    location /pipelines/ {
        proxy_pass http://app:5000/;
    }


  adminer.inc: |
    location /adminer/ {
        proxy_pass http://adminer:8080;
        {{ if .Values.htpasswdSecretName }}include /etc/nginx/conf.d/restricted.inc;{{ end }}
    }

  flower.inc: |
    location /flower/ {
        rewrite ^/flower/(.*)$ /$1 break;
        proxy_pass http://flower:5555;
        proxy_set_header Host $host;
        {{ if .Values.htpasswdSecretName }}include /etc/nginx/conf.d/restricted.inc;{{ end }}
    }

  metabase.inc: |
    location /metabase/ {
        rewrite ^/metabase/(.*)$ /$1 break;
        proxy_pass http://metabase:3000;
        proxy_set_header Host $host;
    }

  grafana.inc: |
    location /grafana/ {
        rewrite ^/grafana/(.*)$ /$1 break;
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
    }

  data.inc: |
    {{ if .Values.global.sharedHostName }}
    # pipelines data in html format - for humans
    location /data {
        autoindex on;
        autoindex_exact_size off;
        autoindex_format html;
        autoindex_localtime on;
        alias /knesset-data/;
        charset utf-8;
    }
    # pipelines data in json format - for scraping
    location /data-json {
        autoindex on;
        autoindex_exact_size on;
        autoindex_format json;
        autoindex_localtime off;
        alias /knesset-data/;
        charset utf-8;
    }
    {{ end }}

  committees.inc: |
    location /committees/ {
        rewrite ^/committees/(.*)$ /$1 break;
        proxy_pass http://committees:5050;
        proxy_set_header Host $host;
    }

  restricted.inc: |
    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/htpasswd/htpasswd;

  ssl.inc: |
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!DSS';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    add_header Strict-Transport-Security "max-age=31536000";
